# Generated by Django 2.1.2 on 2018-10-26 01:49

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('implementation', '0001_initial'),
        ('prescription', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AreaAchievement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('ignition', models.DateField(verbose_name='Ignition Date')),
                ('area_treated', models.DecimalField(decimal_places=1, default=0, max_digits=12, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Area where treatment is complete (ha)')),
                ('area_estimate', models.DecimalField(decimal_places=1, default=0, max_digits=12, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Area treated today (ha)')),
                ('edging_length', models.DecimalField(decimal_places=1, default=0, max_digits=12, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Length of Successful Edging (kms)')),
                ('edging_depth_estimate', models.DecimalField(decimal_places=1, default=0, max_digits=12, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Estimated Depth of Edging (m)')),
                ('dpaw_fire_no', models.CharField(blank=True, max_length=64, verbose_name='DPaW Fire Number')),
                ('dfes_fire_no', models.CharField(blank=True, max_length=64, verbose_name='DFES Fire Number')),
                ('date_escaped', models.DateField(blank=True, null=True, verbose_name='Date of Escape')),
                ('creator', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='report_areaachievement_created', to=settings.AUTH_USER_MODEL)),
                ('ignition_types', models.ManyToManyField(to='implementation.IgnitionType')),
                ('modifier', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='report_areaachievement_modified', to=settings.AUTH_USER_MODEL)),
                ('prescription', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='prescription.Prescription')),
            ],
            options={
                'ordering': ['-ignition'],
                'get_latest_by': 'ignition',
                'verbose_name_plural': 'Day of Burn Achievements',
                'verbose_name': 'Day of Burn Achievement',
            },
        ),
        migrations.CreateModel(
            name='BurnClosureState',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('post_actions', models.NullBooleanField(choices=[(None, 'Not applicable'), (False, 'Incomplete'), (True, 'Complete')], default=False)),
                ('evaluation_summary', models.BooleanField(choices=[(False, 'Incomplete'), (True, 'Complete')], default=False)),
                ('evaluation', models.NullBooleanField(choices=[(None, 'Not applicable'), (False, 'Incomplete'), (True, 'Complete')], default=False)),
                ('post_ignitions', models.NullBooleanField(choices=[(None, 'Not applicable'), (False, 'Incomplete'), (True, 'Complete')], default=False)),
                ('aerial_intensity', models.NullBooleanField(choices=[(None, 'Not applicable'), (False, 'Incomplete'), (True, 'Complete')], default=False)),
                ('satellite_intensity', models.NullBooleanField(choices=[(None, 'Not applicable'), (False, 'Incomplete'), (True, 'Complete')], default=False)),
                ('other', models.NullBooleanField(choices=[(None, 'Not applicable'), (False, 'Incomplete'), (True, 'Complete')], default=False)),
                ('post_burn_checklist', models.BooleanField(choices=[(False, 'Incomplete'), (True, 'Complete')], default=False)),
                ('closure_declaration', models.BooleanField(choices=[(False, 'Incomplete'), (True, 'Complete')], default=False)),
                ('signage', models.NullBooleanField(choices=[(None, 'Not applicable'), (False, 'Incomplete'), (True, 'Complete')], default=False)),
                ('creator', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='report_burnclosurestate_created', to=settings.AUTH_USER_MODEL)),
                ('modifier', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='report_burnclosurestate_modified', to=settings.AUTH_USER_MODEL)),
                ('prescription', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='post_state', to='prescription.Prescription')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BurnImplementationState',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('overview', models.BooleanField(choices=[(False, 'Incomplete'), (True, 'Complete')], default=False)),
                ('pre_actions', models.NullBooleanField(choices=[(None, 'Not applicable'), (False, 'Incomplete'), (True, 'Complete')], default=False)),
                ('actions', models.NullBooleanField(choices=[(None, 'Not applicable'), (False, 'Incomplete'), (True, 'Complete')], default=False)),
                ('roads', models.NullBooleanField(choices=[(None, 'Not applicable'), (False, 'Incomplete'), (True, 'Complete')], default=False)),
                ('traffic', models.NullBooleanField(choices=[(None, 'Not applicable'), (False, 'Incomplete'), (True, 'Complete')], default=False)),
                ('tracks', models.NullBooleanField(choices=[(None, 'Not applicable'), (False, 'Incomplete'), (True, 'Complete')], default=False)),
                ('burning_prescription', models.BooleanField(choices=[(False, 'Incomplete'), (True, 'Complete')], default=False)),
                ('fuel_assessment', models.NullBooleanField(choices=[(None, 'Not applicable'), (False, 'Incomplete'), (True, 'Complete')], default=False)),
                ('edging_plan', models.NullBooleanField(choices=[(None, 'Not applicable'), (False, 'Incomplete'), (True, 'Complete')], default=False)),
                ('contingency_plan', models.BooleanField(choices=[(False, 'Incomplete'), (True, 'Complete')], default=False)),
                ('lighting_sequence', models.BooleanField(choices=[(False, 'Incomplete'), (True, 'Complete')], default=False)),
                ('exclusion_areas', models.NullBooleanField(choices=[(None, 'Not applicable'), (False, 'Incomplete'), (True, 'Complete')], default=False)),
                ('organisational_structure', models.BooleanField(choices=[(False, 'Incomplete'), (True, 'Complete')], default=False)),
                ('briefing', models.BooleanField(choices=[(False, 'Incomplete'), (True, 'Complete')], default=False)),
                ('operation_maps', models.BooleanField(choices=[(False, 'Incomplete'), (True, 'Complete')], default=False)),
                ('aerial_maps', models.NullBooleanField(choices=[(None, 'Not applicable'), (False, 'Incomplete'), (True, 'Complete')], default=False)),
                ('creator', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='report_burnimplementationstate_created', to=settings.AUTH_USER_MODEL)),
                ('modifier', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='report_burnimplementationstate_modified', to=settings.AUTH_USER_MODEL)),
                ('prescription', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='day_state', to='prescription.Prescription')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ClosureDeclaration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('closed', models.BooleanField(default=False)),
                ('creator', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='report_closuredeclaration_created', to=settings.AUTH_USER_MODEL)),
                ('modifier', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='report_closuredeclaration_modified', to=settings.AUTH_USER_MODEL)),
                ('prescription', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='prescription.Prescription')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Evaluation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('achieved', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'No'), (2, 'Yes'), (3, 'Partially')], null=True, verbose_name='Success Criteria Achieved?')),
                ('summary', models.TextField(blank=True, verbose_name='Evaluation Rationale')),
                ('creator', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='report_evaluation_created', to=settings.AUTH_USER_MODEL)),
                ('criteria', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='prescription.SuccessCriteria', verbose_name='Success Criteria')),
                ('modifier', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='report_evaluation_modified', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PostBurnChecklist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('action', models.CharField(max_length=320)),
                ('relevant', models.BooleanField(default=False)),
                ('completed_on', models.DateField(blank=True, default=django.utils.timezone.now, null=True)),
                ('completed_by', models.TextField(blank=True, null=True, verbose_name='Action completed by (name)')),
                ('creator', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='report_postburnchecklist_created', to=settings.AUTH_USER_MODEL)),
                ('modifier', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='report_postburnchecklist_modified', to=settings.AUTH_USER_MODEL)),
                ('prescription', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='prescription.Prescription')),
            ],
            options={
                'ordering': ['pk'],
                'verbose_name_plural': 'post burn checklist',
                'verbose_name': 'post burn checklist item',
            },
        ),
        migrations.CreateModel(
            name='ProposedAction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('observations', models.TextField(blank=True, verbose_name='Observations Identified')),
                ('action', models.TextField(blank=True, verbose_name='Proposed Action')),
                ('creator', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='report_proposedaction_created', to=settings.AUTH_USER_MODEL)),
                ('modifier', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='report_proposedaction_modified', to=settings.AUTH_USER_MODEL)),
                ('prescription', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='prescription.Prescription')),
            ],
            options={
                'verbose_name_plural': 'Lessons Learned',
                'verbose_name': 'Lesson Learned',
            },
        ),
        migrations.CreateModel(
            name='SummaryCompletionState',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('summary', models.BooleanField(choices=[(False, 'Incomplete'), (True, 'Complete')], default=False)),
                ('context_statement', models.BooleanField(choices=[(False, 'Incomplete'), (True, 'Complete')], default=False)),
                ('context_map', models.BooleanField(choices=[(False, 'Incomplete'), (True, 'Complete')], default=False)),
                ('objectives', models.BooleanField(choices=[(False, 'Incomplete'), (True, 'Complete')], default=False)),
                ('success_criteria', models.BooleanField(choices=[(False, 'Incomplete'), (True, 'Complete')], default=False)),
                ('priority_justification', models.BooleanField(choices=[(False, 'Incomplete'), (True, 'Complete')], default=False)),
                ('complexity_analysis', models.BooleanField(choices=[(False, 'Incomplete'), (True, 'Complete')], default=False)),
                ('risk_register', models.BooleanField(choices=[(False, 'Incomplete'), (True, 'Complete')], default=False)),
                ('creator', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='report_summarycompletionstate_created', to=settings.AUTH_USER_MODEL)),
                ('modifier', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='report_summarycompletionstate_modified', to=settings.AUTH_USER_MODEL)),
                ('prescription', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='pre_state', to='prescription.Prescription')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
