
from dpaw_utils import forms

from  pbs.prescription.models import Prescription

class PrescriptionBaseForm(forms.ModelForm):
    class Meta:
        widgets_config = {
            "__default__.view":forms.widgets.TextDisplay()
        }

class PrescriptionCreateForm(PrescriptionBaseForm):
    def __init__(self, *args, **kwargs):
        super(PrescriptionCreateForm, self).__init__(*args, **kwargs)
        self.fields['purposes'].error_messages.update({
            'required': 'There must be at least one burn purpose.'
        })

    def clean_district(self):
        """
        Force the user to select a district.
        """
        data = self.cleaned_data['district']
        if data is None:
            raise forms.ValidationError("You must select a district")
        # FIXME: hack to raise a form validation error on creation.
        if data.archive_date:
            raise forms.ValidationError("You cannot select an archived District")
        return data

    class Meta:
        model = Prescription
        fields = ('planned_season', 'financial_year', 'name', 'description', 'region',
                  'district', 'last_year', 'last_season',
                  'last_season_unknown', 'contentious', 'last_year_unknown',
                  'forest_blocks', 'contentious_rationale', 'purposes',
                  'aircraft_burn', 'priority', 'area', 'treatment_percentage',
                  'perimeter', 'location', 'remote_sensing_priority')
        editable_fields = ('name','planned_season', 'financial_year', 'description', 'region',
                  'district', 'last_year', 'last_season',
                  'last_season_unknown', 'contentious', 'last_year_unknown',
                  'forest_blocks', 'contentious_rationale', 'purposes',
                  'aircraft_burn', 'priority', 'area', 'treatment_percentage',
                  'perimeter', 'location', 'remote_sensing_priority')

