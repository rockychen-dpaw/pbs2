{% extends "admin/change_list.html" %}
{% load i18n staticfiles admin_list %}
{% load multiselect_extras %}

{% block breadcrumbs %}
{% endblock %}
{% block content_title %}
<h1>Regional Overview</h1>
{% endblock %}

{% block content %}
    {# object-tools block should be empty (i.e. no "Create prescribed fire plan" button) #}
    {% block object-tools %}{% endblock %}

    </div>
    <button id="toggletools" type="button" class="btn btn-success btn-small pull-right" style="margin-top:0px;">
        Search and Column tools
    </button>
    </div>

    <div class="row toggletools hide">
        <div class="span12">
            <div class="alert alert-success">
                <strong>Filter</strong>
                <div class="row">
                    <div class="filter-tools btn-group span12" style="white-space:normal;">
                        <form id="id_form_filters" action="" method="post">
                            {% csrf_token %}
                            <div class="span8" >
                                {% multiselect_form %}
                            </div>
                            <div class="span3">
                                <div class="search-tools span3 hide" ></div>
                                <div>
                                    <input type="submit"
                                           class="btn btn-success btn-small btn-block"
                                           style="float:right"
                                           value="Update selection">
                                </div>
                            </div>
                        </form >
                    </div>
                </div>
            </div>
        </div>
        <div class="span12">
            <div class="alert alert-info">
                <strong>Show/Hide Columns</strong>
                <div class="column-tools btn-group" style="white-space:normal;">
                    <button id="template-button" class="btn btn-small btn-info hide">template-button</button>
                </div>
            </div>
        </div>
        <div class="span12">
            <br />
        </div>
    </div><!-- /.row toggletools hide -->
    <!-- The visibility-tools script will bring a Vis object into scope -->
    <script src="{% static 'pbs/js/visibility-tools.js' %}"></script>
    <script src="//static.dpaw.wa.gov.au/static/libs/URI.js/1.16.1/URI.min.js"></script>
    <script>
        $(document).ready(function() {
            $('.changelist-multiselect').each(function () {
                var self = this;
                $(this).multiselect({
                    buttonText: function() {
                        return $(self).attr('title');
                    },
                    buttonClass: "btn btn-small",
                    checkboxName: $(self).attr("id")
                });
            });

            window.hidden_columns = JSON.parse(localStorage.getItem("regional_summary_hidden_columns")) ||
                                    ["contentious", "approval_expiry", "aircraft_burn", "allocation",
                                     "status", "prescribing_officer_name", "remote_sense_priority",
                                     "date_modified_local", "contingencies_migrated"];
            var untoggleable_columns = ["action-checkbox-column", "burn_id", "name", "region", "district"];
            localStorage.setItem("regional_summary_hidden_columns", JSON.stringify(hidden_columns));
            var column_button = $("button#template-button");

            var tools = $("div.toggletools");
            var toolsButton = $("button#toggletools");
            var visKey = "toolsVisible";
            var myStore = localStorage;
            var toolsVisible = Vis.getToolsVisibility(myStore, visKey);
            if (toolsVisible === "true") {
                Vis.ensureToolsVisible(tools, toolsButton, myStore, visKey);
            } else {
                Vis.ensureToolsHidden(tools, toolsButton, myStore, visKey);
            }

            $("table#result_list thead").find("th").each(function() {
                var newbutton = column_button.clone();
                var name = $(this).text();
                var cclass = $(this).attr("class");
                if (cclass) {
                    // Note that the line below fails on an empty query result.
                    var cclass = cclass.split("column-")[1] || cclass.split(" ")[1];
                    cclass = cclass.split(" ")[0]
                } else {
                    // Hide the table if it's empty (columns have no id's)
                    $('table#result_list thead').addClass('hide');
                    return false;
                }
                if ($.inArray(cclass, untoggleable_columns) > -1) {
                    return true;
                }
                var cid = "toggle-" + cclass;
                newbutton.attr("id", cid);
                newbutton.attr("data-cclass", cclass);
                newbutton.text(name);
                if ($.inArray(cclass, hidden_columns) > -1) {
                    var index = $("th.column-" + cclass).index() + 1;
                    $('table#result_list td:nth-child('+index+'),th:nth-child('+index+')').addClass("hide");
                    newbutton.removeClass("btn-info");
                }
                newbutton.removeClass("hide");
                $("div.column-tools").append(newbutton);
            });

            $("div.column-tools button").on("click", function(evt) {
                var button = $(evt.target)
                var index = $("th.column-" + button.attr("data-cclass")).index() + 1;
                if (button.hasClass("btn-info")) {
                    $('table#result_list td:nth-child('+index+'),th:nth-child('+index+')').addClass("hide");
                    button.removeClass("btn-info");
                    hidden_columns.push(button.attr("id").slice(7));
                } else {
                    $('table#result_list td:nth-child('+index+'),th:nth-child('+index+')').removeClass("hide");
                    button.addClass("btn-info");
                    hidden_columns = $.grep(hidden_columns, function(value) {return button.attr("id").search(value) != 7});
                }
                localStorage.setItem("regional_summary_hidden_columns", JSON.stringify(hidden_columns));
                Vis.setToolsVisibilty(myStore, visKey, toolsVisible);
            })
            $("div.search-tools").append($("div#toolbar form").css({"margin": 0}));

            // upgrade django's filters into more compact dropdowns
            //var filters = $("div.span3 ul.nav-list").parents("div.span3").addClass("hide");
            var filters = $("div.span3 ul.nav-list");
            var templateFilterDropdown = $("#template-filter-dropdown");
            var filterDiv = $("div.filter-tools");
            filters.find("li.nav-header").each(function() {
                var dropdown = templateFilterDropdown.clone()
                dropdown.find("ul").append($(this).nextUntil("li.nav-header"));
                var buttonText = $(this).text()
                buttonText = buttonText.slice(3);
                buttonText = buttonText.charAt(0).toUpperCase() + buttonText.slice(1);
                var button = dropdown.find("a.btn").prepend(buttonText);
                if (dropdown.find("li.active").text().slice(1) != "All") {
                    button.addClass("btn-success");
                }
                filterDiv.append(dropdown);
                dropdown.removeClass("hide");
            });

            {% if request.user.profile.region %}
            var myRegion = filterDiv.find("a:contains(Region)")
                                    .siblings("ul")
                                    .find("li:contains({{ request.user.profile.region }})")
                                    .clone()
            var button = myRegion.find("a")
                                    .clone()
                                    .addClass("btn btn-small")
                                    .prepend("My Region (")
                                    .append(")");
            if(myRegion.hasClass("active")) {
                button.addClass("btn-success");
            } else {
                button.addClass("btn-inverse")
            }
            filterDiv.prepend(button);
            {% endif %}

            $("#tablemask").removeClass("hide");
            toolsButton.click(function() {
                if (tools.hasClass("hide")) {
                    Vis.ensureToolsVisible(tools, toolsButton, myStore, visKey);
                } else {
                    Vis.ensureToolsHidden(tools, toolsButton, myStore, visKey);
                }
            });
            if ($('table#result_list thead').hasClass('hide')) {
                toolsButton.click();
            }

            /* ------------------------------------------------------------ */
            /*
            function queryParamString(s) {
                var queryParams = {};
                s.replace(
                    new RegExp("([^?=&]+)(=([^&]*))?", "g"),
                    function($0, $1, $2, $3) {queryParams[$1] = $3;}
                );
                return queryParams;
            };

            function onlyUnique(value, index, self) {
                return self.indexOf(value) === index;
            };

            var windowParams;
            // Parse initial URL parameters for the window location.
            (window.onpopstate = function () {
                var match,
                    pl     = /\+/g,  // Regex for replacing addition symbol with a space
                    search = /([^&=]+)=?([^&]*)/g,
                    decode = function (s) { return decodeURIComponent(s.replace(pl, " ")); },
                    query  = window.location.search.substring(1);

                windowParams = {};
                while (match = search.exec(query))
                   windowParams[decode(match[1])] = decode(match[2]);
            })();

            // Once-off: pop any existing query params ending in 'id__exact'.
            for (var key in windowParams) {
                if (key.indexOf("id__exact") != -1) {
                    delete windowParams[key];
                };
            };
            console.log(windowParams);

            var urlParams;
            $("form#id_form_filters").submit(function(evt) {
                //evt.preventDefault();  // Prevent form submission
                // Iterate through all input checkboxes.
                urlParams = windowParams;
                //console.log(urlParams);
                $("input:checkbox").each(function() {
                    if (this.checked) {
                        //console.log(this);
                        var selectParams = queryParamString(this.value);
                        var selectKeyword = this.name.replace("select-", "");
                        for (var key in selectParams) {
                            if (key.lastIndexOf(selectKeyword, 0) === 0) {  // keyword matched start of key.
                                var newKey = key.replace("__exact", "") + "__in";
                                if (newKey in urlParams) {  // Add value to existing key.
                                    urlParams[newKey] = urlParams[newKey] + "," + selectParams[key];
                                } else {  // Extend urlParams with the new key-value.
                                    urlParams[newKey] = selectParams[key];
                                };
                            };
                        };
                    };
                });
            console.log(urlParams);
            var url = URI("").search(urlParams).toString();
            console.log(url);
            // Append the new query parameter string on the form action.
            $("#id_form_filters").attr("action", "/prescription/prescription/" + url);
            });
            */
            /* ------------------------------------------------------------ */
        });
    </script>
    <div id="tablemask" class="hide row">
        <div class="span12">
            {{ block.super }}
        </div>
    </div>
{% endblock content %}

{% block filters %}
{% comment %}
Note that we add the hide class to this div in order to prevent unsightly 'popping' of the filter
list when it is altered by the JS below.
{% endcomment %}
{% if cl.has_filters %}
<div class="span3 hide">
  <ul class="nav nav-list">
      {% for spec in cl.filter_specs %}
        {% admin_list_filter cl spec %}
      {% endfor %}
  </ul>
</div>
{% endif %}
{% endblock %}

{% block footer %}
    {{ block.super }}
    <script>
        $(function() {
            $("div.actions span.all").hide();
            $("div.actions span.question").hide();
            $("div.actions span.clear").hide();
        });
    </script>
{% endblock footer %}
